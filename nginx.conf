
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    log_format main_ext 'remote_addr="$remote_addr", '
                        '[time_local=$time_local], '
                        'request="$request", '
                        'status="$status", '
                        'http_referer="$http_referer", '
                        'body_bytes_sent="$body_bytes_sent", '
                        'Host="$host", '
                        'sn="$server_name", '
                        'request_time=$request_time, '
                        'http_user_agent="$http_user_agent", '
                        'http_x_forwarded_for="$http_x_forwarded_for", '
                        'request_length="$request_length", '
                        'upstream_address="$upstream_addr", '
                        'upstream_status="$upstream_status", '
                        'upstream_connect_time="$upstream_connect_time", '
                        'upstream_header_time="$upstream_header_time", '
                        'upstream_response_time="$upstream_response_time", '
                        'upstream_response_length="$upstream_response_length"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/api_gateway.conf;
    server {
    listen 8080;

    location /api {
        api write=on;
	allow 127.0.0.1;
	allow 10.1.0.0/16;
	deny all;
        # directives limiting access to the API
    }

    location = /dashboard.html {
        root   /usr/share/nginx/html;
    }

    # Redirect requests made to the pre-NGINX Plus API dashboard
    location = /status.html {
        return 301 /dashboard.html;
    }
   }
     server {
     listen 80;
         server_name  my.hdfcbank.in;
         proxy_http_version 1.1;
         location / {
         proxy_pass http://backend;
         }
     }
     upstream backend {
        zone backend 64k;
        server 10.1.20.90:8086;
        keepalive 64;
        keepalive_requests 100;
        keepalive_timeout 60s;

     }
     upstream backend-one {
        zone backend-one 64k;
        state /var/lib/nginx/state/backend-one.conf;
     }

     upstream backend-eks {
        zone backend-eks 64k;
        state /var/lib/nginx/state/backend-eks.conf;
     }

    server {
       listen 80;
       server_name asg.hdfcbank.in;
       status_zone backend-one;

      # location /backend-one {
       location / {
          proxy_set_header Host $host;
          proxy_pass http://backend-one;
      }

       location @hc-backend-one {
          internal;
          proxy_connect_timeout 1s;
          proxy_read_timeout 1s;
          proxy_send_timeout 1s;

          proxy_pass http://backend-one;
          health_check interval=1s mandatory;
       }

    }
    server {
       listen 80;
       server_name  *.f5selab.in;
       status_zone backend-eks;
       include api_json_errors.conf;

      # location /backend-one {
       location / {
          proxy_set_header   Upgrade           $http_upgrade;
          proxy_set_header   Host              $host;
          proxy_set_header   X-Real-IP         $remote_addr;
          proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Proto $scheme;
          proxy_pass http://backend-eks;
      }

       location @hc-backend-eks {
          internal;
          proxy_connect_timeout 1s;
          proxy_read_timeout 1s;
          proxy_send_timeout 1s;

          proxy_pass http://backend-eks;
          health_check uri=/nginx-ready port=31893 interval=1s mandatory;
       }

    }


}


# TCP/UDP proxy and load balancing block
#
#stream {
    # Example configuration for TCP load balancing

    #upstream stream_backend {
    #    zone tcp_servers 64k;
    #    server backend1.example.com:12345;
    #    server backend2.example.com:12345;
    #}

    #server {
    #    listen 12345;
    #    status_zone tcp_server;
    #    proxy_pass stream_backend;
    #}
#}
